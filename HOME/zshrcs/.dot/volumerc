#! /usr/bin/zsh

#

# Things specific to fedora are here

#

# for coloured-man
unalias man
man() {
	env \
		LESS_TERMCAP_mb=$(printf "\e[1;31m") \
		LESS_TERMCAP_md=$(printf "\e[1;31m") \
		LESS_TERMCAP_me=$(printf "\e[0m") \
		LESS_TERMCAP_se=$(printf "\e[0m") \
		LESS_TERMCAP_so=$(printf "\e[1;44;33m") \
		LESS_TERMCAP_ue=$(printf "\e[0m") \
		LESS_TERMCAP_us=$(printf "\e[1;32m") \
		man "$@"
}

# Set volume from command line
is_linux && is_fullsystem && volm()
{
	if [ $# -lt 1 ]; then
		echo "$0 <value>";
		return;
	fi
	TO_VOLM=$1;
	if ! [[ $TO_VOLM =~ '^[0-9]+$' ]]; then
		echo "$TO_VOLM is not integer";
		return;
	fi

	DEV=$(pactl list sinks|grep -A1 "RUNNING"|tail -n 1|awk '{print $2}');
	if [[ "$DEV" = "" ]]; then
		DEV="alsa_output.pci-0000_00_1b.0.analog-stereo"
	fi
	if [ $TO_VOLM -gt 150 ]; then
		echo "${RED}Not more than 150"
	else
		pactl set-sink-volume $DEV "$1"%
	fi
}

is_linux && is_fullsystem && volc()
{
	if [ $# -lt 1 ]; then
		echo "$0 <value>"
		return
	fi
	# -P : use PCRE
	# -o : output matching lines
	# -m1 : stop after first match
	CURRENT_VOLM=$(amixer sget 'Master',0|grep -Pom1 '[0-9]+(?=%)');
	CHANGE_VOLM=$1;
	if [ $CHANGE_VOLM -gt 0 ]; then
		while [ $CHANGE_VOLM -gt 0 ];
		do
			let CURRENT_VOLM=$CURRENT_VOLM+1
			let CHANGE_VOLM=$CHANGE_VOLM-1
			volm $CURRENT_VOLM
			sleep 0.05s
		done
	else
		while [ $CHANGE_VOLM -lt 0 ];
		do
			let CURRENT_VOLM=$CURRENT_VOLM-1
			let CHANGE_VOLM=$CHANGE_VOLM+1
			volm $CURRENT_VOLM
			sleep 0.05s
		done
	fi
}

is_linux && is_fullsystem && voldance()
{
	if [ $# -lt 1 ]; then
		echo "$0 <value>"
		return
	fi
	while [ 0 ];
	do 
		volc -$1;
		volc $1;
	done
}
