#! /bin/zsh
# ~/.dot/.netrc

propro()
{
	echo "${green}[ + ] Setting Proxy 127.0.0.1:8118";

	export no_proxy="localhost,127.0.0.1,localaddress,.localdomain.com";

	export http_proxy="http://127.0.0.1:8118";
	export https_proxy=$http_proxy;
	export ftp_proxy=$http_proxy;

	echo "${blue}Done!";
}

prof()
{
	echo "${green}[ + ] Unsetting all proxies";

	unset http_proxy;
	unset https_proxy;
	unset ftp_proxy;

	echo "${blue}Done!";
}

vpnpro()
{
	_pro1=$1;
	if [ ! -f ~/vpnbook/vpnproxy.ignore ]; then
		echo "${red}File ~/vpnbook/vpnproxy.ignore Not Found";
			return
	fi
	if [ $# -eq 2 ]; then
		_num=$2;
	else
		_num=200;
	fi
	echo "$_num" > ~/.dot/vpnnum.ignore;
	while [ $_num -gt 0 ];
	do
		INTERFACE="$(ip -4 route ls|grep default|grep -Po '(?<=dev )(\S+)'| awk '{print $1}')";
		_proxy=$(cat ~/vpnbook/vpnproxy.ignore);
		_port=$(cat ~/vpnbook/vpnproxyport.ignore);
		echo "${blue}Setting 10.0.0.0/8 through $INTERFACE";
		#sudo ip route add 10.0.0.0/8 dev $INTERFACE;
		echo "${red}Tries Left : ${blue}$_num${red}, Trying at ${blue}$_pro1${red}, On ${blue}10.1.1.${lgreen}$_proxy:$_port${NC}";
		if [ $_pro1 -lt 3 ]; then
			sudo openvpn --script-security 2 --http-proxy 10.1.1.$_proxy $_port ~/vpnbook/vpnproxy$_proxy.ignore --config ~/vpnbook/client$_pro1.ovpn;
		else
			sudo openvpn --script-security 2 --config ~/vpnbook/client3.ovpn;
		fi
		echo "${blue}Deleting routing of 10.0.0.0/8";
		#sudo ip route delete 10.0.0.0/8;
		_num=$(cat ~/.dot/vpnnum.ignore);
		echo $_RETVAL;
		let _num=$_num-1;
		echo "$_num" > ~/.dot/vpnnum.ignore
		#python ~/.dot/notif.py "OpenVPN" "Disconnected. Tried Left : $_num"
		#if [ $_pro1 -eq 1 ]; then
		#	echo "changing ${purple} 1 -> 2 ${NC}";
		#	_pro1=2;
		#else
		#	echo "changing ${purple} 2 -> 1 ${NC}";
		#	_pro1=1;
		#fi
	done
}

setvpn()
{
	if [ $# -eq 1 ]; then
		echo "$1" > ~/.dot/vpnnum.ignore;
		echo "${blue}VPN Tries set to $1";
	else
		echo "${green}VPN Tries Left : $(cat ~/.dot/vpnnum.ignore)";
	fi
}

arpro()
{
	for INTF in ap0 wlp1s0 enp3s0; do
		echo "${red}ARPing $INTF${cyan}";
		__XX=$(arp -n -i $INTF|grep -v incomplete|tail -n +2|sort -t . -k 3,3n -k 4,4n);
		__MACR=$(echo $__XX|awk '{print $3}');
		__IPR=$(echo $__XX|awk '{print $1}');
		echo $__MACR > ~/.dot/mac.ignore;
		echo $__IPR > ~/.dot/ip.ignore;
		python3 ~/.dot/arpro.py ${@};
	done
	rm ~/.dot/mac.ignore;
	rm ~/.dot/ip.ignore;
}

gpull()
{
	curr=$(pwd);
	for dir in $(find * -maxdepth 0 -type d);
	do
		fName=$(basename $dir);
		cd $fName;
		if [ $(git branch | sed -n '/\* /s///p') != "master" ]; then
			echo "${purple}git checkout master";
			git checkout master;
		fi
		for rem in $(git remote); do
			echo "${yellow}= = > ${blue}git pull ${red}$rem ${blue}master${blue} ${red}in ${lgreen}$fName ${red}@ ${blue}$(git remote show -n $rem |grep Fetch|awk '{print $3}')${NC}";
			git pull $rem master;
			echo "";
		done
		$curr;
	done
}

getmac()
{
	curl http://api.macvendors.com/$1;
}

randmac()
{
	hexdump -n3 -e'/3 "00:69:69" 3/1 ":%02X"' /dev/random	
}
